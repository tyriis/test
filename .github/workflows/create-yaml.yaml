---
# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Create YAML and PR Workflow

on:
  issues:
    types:
      - opened

jobs:
  test-create-yaml-and-pr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Test Check for label
        id: check-label
        continue-on-error: true
        run: |
          if [[ $(jq '.issue.labels[].name' $GITHUB_EVENT_PATH) == *"repo-request"* ]]; then
            echo "Label found"
            echo "label-check=true" >> $GITHUB_OUTPUT
          else
            echo "Label not found"
            echo "label-check=false" >> $GITHUB_OUTPUT
          fi

      - name: Test Check for user
        id: check-user
        continue-on-error: true
        run: |
          USER=$(jq '.issue.user.login' $GITHUB_EVENT_PATH)
          if [[ $USER == '"tyriis"' ]]; then
            echo "$USER is allowed to create YAML"
            echo "user-check=true" >> $GITHUB_OUTPUT
          else
            echo "$USER is not allowed to create YAML"
            echo "user-check=false" >> $GITHUB_OUTPUT
          fi

      - name: Close issue on failure
        if: steps.check-user.outcome == 'failure' && steps.check-label.outcome == 'success'
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          USER=$(jq '.issue.user.login' $GITHUB_EVENT_PATH)
          if [[ $(jq '.issue.labels[].name' $GITHUB_EVENT_PATH) == *"repo-request"* ]]; then
            echo "Closing issue"
            gh issue close ${{ github.event.issue.number }} --comment "$USER is not allowed to create YAML"
          fi

      - name: Create YAML files
        if: steps.check-user.outcome == 'success' && steps.check-label.outcome == 'success'
        id: create-yaml
        run: |
          # Extract data from issue body
          BODY=$(jq -r '.issue.body' $GITHUB_EVENT_PATH)

          REPO_NAME=$(echo "$BODY" | sed -n '/### Name of the repository/{n;n;p}')
          REPO_DESC=$(echo "$BODY" | sed -n '/### Description of the repository/{n;n;p}')
          REPO_VIS=$(echo "$BODY" | sed -n '/### Visibility of the repository/{n;n;p}')
          REPO_TOPICS=$(echo "$BODY" | sed -n '/### Topics for the repository/{n;n;p}')

          # Validate required fields
          if [ -z "$REPO_NAME" ] || [ -z "$REPO_VIS" ]; then
            echo "Error: Missing required fields"
            exit 1
          fi

          # Create repository YAML
          mkdir -p data/repositories
          cat > "data/repositories/${REPO_NAME}.yaml" << EOF
          apiVersion: tyriis.dev/v1alpha1
          kind: GithubRepository
          metadata:
            name: ${REPO_NAME}
            namespace: tyriis
            description: ${REPO_DESC}
            topics:
              - $(echo $REPO_TOPICS | sed 's/, /\n    - /g')
          spec:
            visibility: ${REPO_VIS}
            defaultLabels: true
            labelNamespaces:
              - rennovate-default
          EOF

          echo "repo-name=${REPO_NAME}" >> $GITHUB_OUTPUT

          cat "data/repositories/${REPO_NAME}.yaml"

      - name: commit files
        if: steps.check-user.outcome == 'success' && steps.check-label.outcome == 'success'
        id: create-pr
        uses: tyriis/multi-file-commit@v0.3.14
        with:
          message: "Create YAML for ${{ steps.create-yaml.outputs.repo-name }}"
          ref: "repo/${{ steps.create-yaml.outputs.repo-name }}"

